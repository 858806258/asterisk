Index: channels/chan_sip.c
===================================================================
--- channels/chan_sip.c	(.../branches/1.8)	(revision 402908)
+++ channels/chan_sip.c	(.../team/oej/blackberry-a-rtcp-sdp-support-1.8)	(revision 402908)
@@ -1314,6 +1314,7 @@
 static int process_sdp_a_audio(const char *a, struct sip_pvt *p, struct ast_rtp_codecs *newaudiortp, int *last_rtpmap_codec);
 static int process_sdp_a_video(const char *a, struct sip_pvt *p, struct ast_rtp_codecs *newvideortp, int *last_rtpmap_codec);
 static int process_sdp_a_text(const char *a, struct sip_pvt *p, struct ast_rtp_codecs *newtextrtp, char *red_fmtp, int *red_num_gen, int *red_data_pt, int *last_rtpmap_codec);
+static int process_sdp_a_rtcp(const char *a, unsigned int *rtcpport);
 static int process_sdp_a_image(const char *a, struct sip_pvt *p);
 static void add_codec_to_sdp(const struct sip_pvt *p, format_t codec,
 			     struct ast_str **m_buf, struct ast_str **a_buf,
@@ -9562,6 +9563,7 @@
 		/* Media stream specific parameters */
 		while ((type = get_sdp_line(&iterator, next - 1, req, &value)) != '\0') {
 			int processed = FALSE;
+			unsigned int rtcpport = 0;
 
 			switch (type) {
 			case 'c':
@@ -9597,6 +9599,9 @@
 						processed = TRUE;
 					} else if (process_sdp_a_audio(value, p, &newaudiortp, &last_rtpmap_codec)) {
 						processed = TRUE;
+					} else if (process_sdp_a_rtcp(value, &rtcpport)) {
+						ast_rtp_instance_set_remote_rtcp_port(p->rtp, rtcpport);
+						processed = TRUE;
 					}
 				}
 				/* Video specific scanning */
@@ -9606,6 +9611,9 @@
 						processed = TRUE;
 					} else if (process_sdp_a_video(value, p, &newvideortp, &last_rtpmap_codec)) {
 						processed = TRUE;
+					} else if (process_sdp_a_rtcp(value, &rtcpport)) {
+						ast_rtp_instance_set_remote_rtcp_port(p->vrtp, rtcpport);
+						processed = TRUE;
 					}
 				}
 				/* Text (T.140) specific scanning */
@@ -10047,6 +10055,30 @@
 	return found;
 }
 
+/*! \brief Find rtcp header and change RTCP port for remote party */
+static int process_sdp_a_rtcp(const char *a, unsigned int *rtcpport)
+{
+	int found = FALSE;
+	char *tmp;
+	unsigned int port = 0;
+
+	if (strcasecmp(a, "rtcp")) {
+		return found;
+	}
+
+	tmp = strrchr(a, ':');
+	if (tmp) {
+		tmp++;
+		port = (unsigned int) atoi(tmp);
+		if (port > 0) {
+			ast_debug(2, "-- RTCP port set to %d (a=rtcp) \n", port);
+			*rtcpport = port;
+			found = TRUE;
+		}
+	}
+	return found;
+}
+
 static int process_sdp_a_audio(const char *a, struct sip_pvt *p, struct ast_rtp_codecs *newaudiortp, int *last_rtpmap_codec)
 {
 	int found = FALSE;
Index: include/asterisk/rtp_engine.h
===================================================================
--- include/asterisk/rtp_engine.h	(.../branches/1.8)	(revision 402908)
+++ include/asterisk/rtp_engine.h	(.../team/oej/blackberry-a-rtcp-sdp-support-1.8)	(revision 402908)
@@ -341,6 +341,8 @@
 	void (*packetization_set)(struct ast_rtp_instance *instance, struct ast_codec_pref *pref);
 	/*! Callback for setting the remote address that RTP is to be sent to */
 	void (*remote_address_set)(struct ast_rtp_instance *instance, struct ast_sockaddr *sa);
+	/*! Callback for setting the remote port that RTCP is to be sent to */
+	void (*remote_rtcp_port_set)(struct ast_rtp_instance *instance, unsigned int port);
 	/*! Callback for setting an alternate remote address */
 	void (*alt_remote_address_set)(struct ast_rtp_instance *instance, struct ast_sockaddr *sa);
 	/*! Callback for changing DTMF mode */
@@ -672,6 +674,16 @@
  */
 int ast_rtp_instance_set_remote_address(struct ast_rtp_instance *instance, const struct ast_sockaddr *address);
 
+/*!
+ * \brief Change the RTCP port we're sending to the remote instance
+ *
+ * \retval 0 success
+ *
+ * This changes the port we are sending to (for instance when we find a=rtcp in a sdp)
+ * \since 1.8 Edvx
+ */
+int ast_rtp_instance_set_remote_rtcp_port(struct ast_rtp_instance *instance,
+		unsigned int port);
 
 /*!
  * \brief Set the address of an an alternate RTP address to receive from
Index: main/rtp_engine.c
===================================================================
--- main/rtp_engine.c	(.../branches/1.8)	(revision 402908)
+++ main/rtp_engine.c	(.../team/oej/blackberry-a-rtcp-sdp-support-1.8)	(revision 402908)
@@ -402,6 +402,16 @@
 	return 0;
 }
 
+int ast_rtp_instance_set_remote_rtcp_port(struct ast_rtp_instance *instance,
+		unsigned int port)
+{
+	if (instance->engine->remote_rtcp_port_set) {
+		instance->engine->remote_rtcp_port_set(instance, port);
+	}
+
+	return 0;
+}
+
 int ast_rtp_instance_set_alt_remote_address(struct ast_rtp_instance *instance,
 		const struct ast_sockaddr *address)
 {
Index: res/res_rtp_asterisk.c
===================================================================
--- res/res_rtp_asterisk.c	(.../branches/1.8)	(revision 402908)
+++ res/res_rtp_asterisk.c	(.../team/oej/blackberry-a-rtcp-sdp-support-1.8)	(revision 402908)
@@ -284,6 +284,7 @@
 static void ast_rtp_prop_set(struct ast_rtp_instance *instance, enum ast_rtp_property property, int value);
 static int ast_rtp_fd(struct ast_rtp_instance *instance, int rtcp);
 static void ast_rtp_remote_address_set(struct ast_rtp_instance *instance, struct ast_sockaddr *addr);
+static void ast_rtp_remote_rtcp_port_set(struct ast_rtp_instance *instance, unsigned int port);
 static void ast_rtp_alt_remote_address_set(struct ast_rtp_instance *instance, struct ast_sockaddr *addr);
 static int rtp_red_init(struct ast_rtp_instance *instance, int buffer_time, int *payloads, int generations);
 static int rtp_red_buffer(struct ast_rtp_instance *instance, struct ast_frame *frame);
@@ -312,6 +313,7 @@
 	.prop_set = ast_rtp_prop_set,
 	.fd = ast_rtp_fd,
 	.remote_address_set = ast_rtp_remote_address_set,
+	.remote_rtcp_port_set = ast_rtp_remote_rtcp_port_set,
 	.alt_remote_address_set = ast_rtp_alt_remote_address_set,
 	.red_init = rtp_red_init,
 	.red_buffer = rtp_red_buffer,
@@ -2619,6 +2621,15 @@
 	return;
 }
 
+static void ast_rtp_remote_rtcp_port_set(struct ast_rtp_instance *instance, unsigned int port)
+{
+	struct ast_rtp *rtp = ast_rtp_instance_get_data(instance);
+	if (!ast_sockaddr_isnull(&rtp->rtcp->them)) {
+		ast_sockaddr_set_port(&rtp->rtcp->them, port);
+		ast_debug(1, "Setting RTCP port on RTP instance '%p' to %d\n", instance, port);
+	}
+}
+
 static void ast_rtp_alt_remote_address_set(struct ast_rtp_instance *instance, struct ast_sockaddr *addr)
 {
 	struct ast_rtp *rtp = ast_rtp_instance_get_data(instance);
